#!/usr/bin/env python3
# -*- coding:utf-8 -*-
# @author ZhangSir
# @date 2022/11/19
# @file 01_logging库的基本介绍.py

"""
日志的等级说明,logging日志一般分为五个常用等级

1.DEBUG,最详细的日志信息，程序调试bug时使用
2.INFO,信息详细程度仅次于DEBUG，程序正常运行时使用
3.WARNING，某些不期望的事情发生时记录的信息，但并不是错误
4.ERROR，由于严重的问题导致不能正常运行时记录的信息，即出错时使用
5.CRITICAL，特别严重的问题，导致程序不能再继续运行时使用，很少使用该等级

只有级别高于或者等于该指定日志级别的日志记录才会被输出，低于该等级的日志记录将会被丢弃
"""

# ================================================================

"""
日志的常用函数

在日志记录过程中，只有通过日志函数才能输出日志信息
logging日志常用的函数有6个
1.logging.basicConfig(),对root logger进行一次性配置。
用于指定要记录的日志级别、日志格式、日志输出位置、日志文件的打开模式等信息
2.logging.debug(),严重级别为“DEBUG”的日志
3.logging.info(),严重级别为“INFO”的日志
4.logging.warning(),严重级别为“WARNING”的日志
5.logging.error(),严重级别为“ERROR”的日志
6.logging.critical(),严重级别为“CRITICAL”的日志
"""

# ==================================================================

"""
日志常用的输出格式

在实际的测试项目中，需要通过日志的输出格式去记录日志，
包括记录的时间、进程号、日志的等级、出现的对应文件、行号等，
以帮助我们定位问题，分析过程。
logging模块中，定义好的，可以用于format格式的字符串中的6个常用字段。

1.asctime,
使用格式：%(asctime)s,    描述：打印日志的时间
2.levelname,
使用格式：%(levelname)s,    描述：打印当前执行的程序名
3.levelno,
使用格式：%(levelno)s,    描述：打印日志的当前行号
4.message,
使用格式：%(message)s,    描述：打印日志级别的名称
5.filename,
使用格式：%(filename)s,    描述：打印日志信息
6.process,
使用格式：%(process)d,    描述：打印进程的ID号
"""
